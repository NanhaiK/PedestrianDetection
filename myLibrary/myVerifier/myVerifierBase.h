/**
 * @file myVerifierBase.h verifier base class definition
 */

#ifndef _MY_VERIFIER_BASE_
#define _MY_VERIFIER_BASE_

#include "common.h"
#include "myPlugin/myBBReader/myBBReader.h"
#include "BBComputation.h"

/**
 * @brief Some classes for calculating system performance
 */
namespace Verifier {

/**
 * @brief base class for verifier
 */
class myVerifierBase {
public:     // public attribute

protected:  // protected attribute

private:    // private attribute
  Plugin::myBBReader m_oGroundTruthBB;
  Plugin::myBBReader m_oDetectionBB;

public:     // public method
  /**
   * @brief defualt constructor
   */
  myVerifierBase(void) { Init(); }

  /**
   * @brief create object by two file path.
   *
   * @param sGTPath Ground-Truth labeling file path.
   * @param sResultPath labeling file generated by some methods.
   */
  myVerifierBase(const std::string& sGTPath, const std::string& sResultPath);

  virtual ~myVerifierBase(void) {}

  /**
   * @brief load ground-truth labeling file
   *
   * @param sGTPath Ground-Truth labeling file path.
   */
  void LoadGroundTruth(const std::string& sGTPath);
  
  /**
   * @brief load 
   *
   * @param sResultPath labeling file generated by some methods.
   */
  void LoadDetection(const std::string& sResultPath);
  
  /**
   * @brief take out the bounding boxes by specific frame number.
   *
   * @param iFrameNum
   * @param vrGroundTruth vector of cv::Rect2i for bounding boxes in ground-truth
   * @param vrDetection vector of cv::Rect2i for bounding boxes in detection result
   */
  void GetBB(int iFrameNum,
             std::vector<cv::Rect2i>& vrGroundTruth,
             std::vector<cv::Rect2i>& vrDetection) const;

  /**
   * @brief compare bounding boxes within same frame
   *
   * @param iFrameNum frame number want to compare
   */
  virtual void CompareByFrame(int iFrameNum) = 0;

  /**
   * @brief compare bounding boxes from start frame to end
   *
   * @param iStart first frame number
   * @param iEnd end frame number
   */
  void CompareByFrames(int iStart, int iEnd);

  /**
   * @brief compare bounding boxes in all frames
   *
   * 
   */
  void CompareAllFrames(void);

  /**
   * @brief get the compared result
   *
   * @return the result value
   */
  virtual float GetResult(void) const = 0;

protected:  // protected method

private:    // private method
  void Init(void);

};  // class

} // namespace

#endif // !_MY_VERIFIER_BASE_